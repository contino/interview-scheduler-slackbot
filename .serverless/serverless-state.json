{
  "service": {
    "service": "serverless-flask",
    "serviceObject": {
      "name": "serverless-flask"
    },
    "provider": {
      "stage": "master",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "python3.7",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "SendUnderscoremessagesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-flask-master-send_messages"
            }
          },
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-flask-master-app"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "master",
                        "serverless-flask",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-flask-master-send_messages:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-flask-master-app:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-flask-master-send_messages:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-flask-master-app:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-flask",
                    "master",
                    "us-east-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SendUnderscoremessagesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-flask/master/1583101135204-2020-03-01T22:18:55.204Z/serverless-flask.zip"
              },
              "FunctionName": "serverless-flask-master-send_messages",
              "Handler": "send_messages.lambda_handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.7",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SLACK_BOT_TOKEN": "xoxb-944033221973-954347421926-mKpkJu19UvPAT29c4FYp5NJz",
                  "SLACK_VERIFICATION_TOKEN": "fYSp1k2g5FubaL485hUtYimk",
                  "INTERVIEW_AVAIL_CAL": "contino.io_eepahmdv2bb1tvhbvv0ictha3g@group.calendar.google.com",
                  "SVC_ACCOUNT_PRIV_KEY_ID": "191161d4fadad103860896f1149f9bd59cf92dfb",
                  "SVC_ACCOUNT_PRIV_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQChTyYYZmILcuHi\\nc9a+hbzLVxjDYfvrpBNRhFxhl+izdHOdA6mBp9eubh4/zsgq015jtlr3YLXXIxSA\\nbyHQlmaPRDq1Vbnad9MxzMUI+BzV93uqMU+6wrQBqrS2fSltrn6nWM4/Wu2cuHrF\\nxesWtdoa+zoj+G7B4ec03Cwa0a1vDoyDbC6S8RfMHXtTytq5Lf6FCF2ay/UB8Yrg\\nVGyFuxM1eB3GSUCgMx6QD9caHb5wkVMZ4f8pX06kh4K0Xd2GrBjdJ8EnhgZeJAEL\\nNaiACg0ihRH+7AgbFHzYcVyeyKJW4/hTGn3R8MpSCykEK+kxGMhed7rWMGsu9bPi\\nYpP80g59AgMBAAECggEAUDrho7kogrE9EDi1UkWKRUiolGUju2v7/8tpd1Dq+Hav\\nGiU8JbSpXaR/fxUGEebXR5jnXarIRpy4Ebk0hF6J3C//Uzm0GqkGbfp+9ZsSHInf\\nBCNKmIVGqp2RDELsXBUyAWH2EyTSkeRfjAaIit8f/9N8c2+ZBu2o5W2sshofvOAg\\neyDP2g91+8CviEvvyzIsrflbL7dEaYVmmsJqIaB9Xd0Y2ok8Sj7sf21HGRBPgBSu\\niYW9kURa57C+BCQrN4qJeSwLGJDoTo+4L9g/id2NIJrPEIH8jQ99fK823n4w0/u3\\nS1fe/yRrQ2et8OwI1oGVnSnUfDxK6y0ZKh7265RGsQKBgQDgOpoCaPUGv8JKfIXz\\neinLZ/4coGGOPlZUm4DF5g0/HeCb3jQSOIuv1vta+KtaqzyqdWnop2ePsEwsKP4K\\nlnIN4K1eJF2Wp66i5Wd56B/LEplQ/PKiYkZYaxmGyiJxC1m7h1GoTSp0r787tQTR\\nfLZP6Zy8ztNZvYsb3vVVQHt9gwKBgQC4KkaKkxqyHl4OHqXhYN2/saXfxaaXY15E\\nHx7yBOidGPx0HknXg+8BaX382bs0fQMd1Yl3rofIKIJKeWNI30fDZNudIAc5VnRP\\nOqFLgotcjzbusLoekxtnJqdxsq5tuGNqEoGJB/fLSL2zgEUkkJWEz/aHvEac9fSo\\n25+ALzKD/wKBgQC4vg+d5LPct6lwjWAf1osQ18F5/HnkJGAknWpfosdPNWKViWIF\\nkSkl206FCVTFA0iceNiloyekL3DTAYMtXf7iiDbO1c92DPnJpJC41BM90TkYjQ+r\\n0qR6vOLvNyNhWCS6aSdSLyHHufUpUF+D6eibtrI4rX9c9NnkQLKJZvNX2QKBgGtz\\nFvcw/slfmGbKkOPfXWHDp1DZA+qd6lj6g1aXcJSACINDTLf2XRNI1l4ZNvVX3uKg\\nPPVcGhK5N9N14WyaAUfKZ6vUDQLyIyg6v/LLdr4JPPakm+LM15cmYVmf889GXpJ7\\nu6IUyQmNJkk9lJnR1brIj0EAo35ermF6yiPC5clHAoGBANACJc6qQ8YtXRGCGpVU\\nzuYMrAPSMJmehxvOYQC4QRzZefTijpIs3omGm8Lpz+QotNOUltJx/aAeJADJ2fts\\niOwv7O7+CBJbSDW+hqW2MaSNaHrvv2HmQJ8LMU0w7oX91nhLPNDRykF3gJ3IvjfH\\n1/X7Mr52PGUXvA1EREEVFZOa\\n-----END PRIVATE KEY-----\\n",
                  "SVC_ACCOUNT_EMAIL": "interview-bot-dev@deft-breaker-269101.iam.gserviceaccount.com",
                  "SVC_ACCOUNT_ID": "103295999729929401239",
                  "SVC_ACCOUNT_X509_CERT_URL": "https://www.googleapis.com/robot/v1/metadata/x509/interview-bot-dev%40deft-breaker-269101.iam.gserviceaccount.com"
                }
              }
            },
            "DependsOn": [
              "SendUnderscoremessagesLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SendUnderscoremessagesLambdaVersionFZIsSKUIFt3XEVwd0cuU5n32ILsJxjD42seixaHSl6E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendUnderscoremessagesLambdaFunction"
              },
              "CodeSha256": "IZ1hX/7qVQ11QuVkincMPaFbZ4cxDwb4CA0lubxYlvE="
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-flask/master/1583101135204-2020-03-01T22:18:55.204Z/serverless-flask.zip"
              },
              "FunctionName": "serverless-flask-master-app",
              "Handler": "wsgi_handler.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.7",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SLACK_BOT_TOKEN": "xoxb-944033221973-954347421926-mKpkJu19UvPAT29c4FYp5NJz",
                  "SLACK_VERIFICATION_TOKEN": "fYSp1k2g5FubaL485hUtYimk",
                  "INTERVIEW_AVAIL_CAL": "contino.io_eepahmdv2bb1tvhbvv0ictha3g@group.calendar.google.com",
                  "SVC_ACCOUNT_PRIV_KEY_ID": "191161d4fadad103860896f1149f9bd59cf92dfb",
                  "SVC_ACCOUNT_PRIV_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQChTyYYZmILcuHi\\nc9a+hbzLVxjDYfvrpBNRhFxhl+izdHOdA6mBp9eubh4/zsgq015jtlr3YLXXIxSA\\nbyHQlmaPRDq1Vbnad9MxzMUI+BzV93uqMU+6wrQBqrS2fSltrn6nWM4/Wu2cuHrF\\nxesWtdoa+zoj+G7B4ec03Cwa0a1vDoyDbC6S8RfMHXtTytq5Lf6FCF2ay/UB8Yrg\\nVGyFuxM1eB3GSUCgMx6QD9caHb5wkVMZ4f8pX06kh4K0Xd2GrBjdJ8EnhgZeJAEL\\nNaiACg0ihRH+7AgbFHzYcVyeyKJW4/hTGn3R8MpSCykEK+kxGMhed7rWMGsu9bPi\\nYpP80g59AgMBAAECggEAUDrho7kogrE9EDi1UkWKRUiolGUju2v7/8tpd1Dq+Hav\\nGiU8JbSpXaR/fxUGEebXR5jnXarIRpy4Ebk0hF6J3C//Uzm0GqkGbfp+9ZsSHInf\\nBCNKmIVGqp2RDELsXBUyAWH2EyTSkeRfjAaIit8f/9N8c2+ZBu2o5W2sshofvOAg\\neyDP2g91+8CviEvvyzIsrflbL7dEaYVmmsJqIaB9Xd0Y2ok8Sj7sf21HGRBPgBSu\\niYW9kURa57C+BCQrN4qJeSwLGJDoTo+4L9g/id2NIJrPEIH8jQ99fK823n4w0/u3\\nS1fe/yRrQ2et8OwI1oGVnSnUfDxK6y0ZKh7265RGsQKBgQDgOpoCaPUGv8JKfIXz\\neinLZ/4coGGOPlZUm4DF5g0/HeCb3jQSOIuv1vta+KtaqzyqdWnop2ePsEwsKP4K\\nlnIN4K1eJF2Wp66i5Wd56B/LEplQ/PKiYkZYaxmGyiJxC1m7h1GoTSp0r787tQTR\\nfLZP6Zy8ztNZvYsb3vVVQHt9gwKBgQC4KkaKkxqyHl4OHqXhYN2/saXfxaaXY15E\\nHx7yBOidGPx0HknXg+8BaX382bs0fQMd1Yl3rofIKIJKeWNI30fDZNudIAc5VnRP\\nOqFLgotcjzbusLoekxtnJqdxsq5tuGNqEoGJB/fLSL2zgEUkkJWEz/aHvEac9fSo\\n25+ALzKD/wKBgQC4vg+d5LPct6lwjWAf1osQ18F5/HnkJGAknWpfosdPNWKViWIF\\nkSkl206FCVTFA0iceNiloyekL3DTAYMtXf7iiDbO1c92DPnJpJC41BM90TkYjQ+r\\n0qR6vOLvNyNhWCS6aSdSLyHHufUpUF+D6eibtrI4rX9c9NnkQLKJZvNX2QKBgGtz\\nFvcw/slfmGbKkOPfXWHDp1DZA+qd6lj6g1aXcJSACINDTLf2XRNI1l4ZNvVX3uKg\\nPPVcGhK5N9N14WyaAUfKZ6vUDQLyIyg6v/LLdr4JPPakm+LM15cmYVmf889GXpJ7\\nu6IUyQmNJkk9lJnR1brIj0EAo35ermF6yiPC5clHAoGBANACJc6qQ8YtXRGCGpVU\\nzuYMrAPSMJmehxvOYQC4QRzZefTijpIs3omGm8Lpz+QotNOUltJx/aAeJADJ2fts\\niOwv7O7+CBJbSDW+hqW2MaSNaHrvv2HmQJ8LMU0w7oX91nhLPNDRykF3gJ3IvjfH\\n1/X7Mr52PGUXvA1EREEVFZOa\\n-----END PRIVATE KEY-----\\n",
                  "SVC_ACCOUNT_EMAIL": "interview-bot-dev@deft-breaker-269101.iam.gserviceaccount.com",
                  "SVC_ACCOUNT_ID": "103295999729929401239",
                  "SVC_ACCOUNT_X509_CERT_URL": "https://www.googleapis.com/robot/v1/metadata/x509/interview-bot-dev%40deft-breaker-269101.iam.gserviceaccount.com"
                }
              }
            },
            "DependsOn": [
              "AppLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AppLambdaVersionNOpKUYUpZQbhhlg3PLYeG7EoNGN9zIjdJ7r1Nbft7u0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "IZ1hX/7qVQ11QuVkincMPaFbZ4cxDwb4CA0lubxYlvE="
            }
          },
          "SendUnderscoremessagesEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(25 22 ? * 7 *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "SendUnderscoremessagesLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "send_messagesSchedule"
                }
              ]
            }
          },
          "SendUnderscoremessagesLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SendUnderscoremessagesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "events.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::GetAtt": [
                  "SendUnderscoremessagesEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "master-serverless-flask",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1583101135327": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "master"
            },
            "DependsOn": [
              "ApiGatewayMethodAny",
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "AppLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "SendUnderscoremessagesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendUnderscoremessagesLambdaVersionFZIsSKUIFt3XEVwd0cuU5n32ILsJxjD42seixaHSl6E"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersionNOpKUYUpZQbhhlg3PLYeG7EoNGN9zIjdJ7r1Nbft7u0"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/master"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "wsgi": {
        "app": "app.app",
        "packRequirements": false
      },
      "pythonRequirements": {
        "dockerizePip": "non-linux"
      }
    },
    "plugins": [
      "serverless-python-requirements",
      "serverless-wsgi"
    ],
    "pluginsData": {},
    "functions": {
      "send_messages": {
        "handler": "send_messages.lambda_handler",
        "events": [
          {
            "schedule": "cron(25 22 ? * 7 *)"
          }
        ],
        "environment": {
          "SLACK_BOT_TOKEN": "xoxb-944033221973-954347421926-mKpkJu19UvPAT29c4FYp5NJz",
          "SLACK_VERIFICATION_TOKEN": "fYSp1k2g5FubaL485hUtYimk",
          "INTERVIEW_AVAIL_CAL": "contino.io_eepahmdv2bb1tvhbvv0ictha3g@group.calendar.google.com",
          "SVC_ACCOUNT_PRIV_KEY_ID": "191161d4fadad103860896f1149f9bd59cf92dfb",
          "SVC_ACCOUNT_PRIV_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQChTyYYZmILcuHi\\nc9a+hbzLVxjDYfvrpBNRhFxhl+izdHOdA6mBp9eubh4/zsgq015jtlr3YLXXIxSA\\nbyHQlmaPRDq1Vbnad9MxzMUI+BzV93uqMU+6wrQBqrS2fSltrn6nWM4/Wu2cuHrF\\nxesWtdoa+zoj+G7B4ec03Cwa0a1vDoyDbC6S8RfMHXtTytq5Lf6FCF2ay/UB8Yrg\\nVGyFuxM1eB3GSUCgMx6QD9caHb5wkVMZ4f8pX06kh4K0Xd2GrBjdJ8EnhgZeJAEL\\nNaiACg0ihRH+7AgbFHzYcVyeyKJW4/hTGn3R8MpSCykEK+kxGMhed7rWMGsu9bPi\\nYpP80g59AgMBAAECggEAUDrho7kogrE9EDi1UkWKRUiolGUju2v7/8tpd1Dq+Hav\\nGiU8JbSpXaR/fxUGEebXR5jnXarIRpy4Ebk0hF6J3C//Uzm0GqkGbfp+9ZsSHInf\\nBCNKmIVGqp2RDELsXBUyAWH2EyTSkeRfjAaIit8f/9N8c2+ZBu2o5W2sshofvOAg\\neyDP2g91+8CviEvvyzIsrflbL7dEaYVmmsJqIaB9Xd0Y2ok8Sj7sf21HGRBPgBSu\\niYW9kURa57C+BCQrN4qJeSwLGJDoTo+4L9g/id2NIJrPEIH8jQ99fK823n4w0/u3\\nS1fe/yRrQ2et8OwI1oGVnSnUfDxK6y0ZKh7265RGsQKBgQDgOpoCaPUGv8JKfIXz\\neinLZ/4coGGOPlZUm4DF5g0/HeCb3jQSOIuv1vta+KtaqzyqdWnop2ePsEwsKP4K\\nlnIN4K1eJF2Wp66i5Wd56B/LEplQ/PKiYkZYaxmGyiJxC1m7h1GoTSp0r787tQTR\\nfLZP6Zy8ztNZvYsb3vVVQHt9gwKBgQC4KkaKkxqyHl4OHqXhYN2/saXfxaaXY15E\\nHx7yBOidGPx0HknXg+8BaX382bs0fQMd1Yl3rofIKIJKeWNI30fDZNudIAc5VnRP\\nOqFLgotcjzbusLoekxtnJqdxsq5tuGNqEoGJB/fLSL2zgEUkkJWEz/aHvEac9fSo\\n25+ALzKD/wKBgQC4vg+d5LPct6lwjWAf1osQ18F5/HnkJGAknWpfosdPNWKViWIF\\nkSkl206FCVTFA0iceNiloyekL3DTAYMtXf7iiDbO1c92DPnJpJC41BM90TkYjQ+r\\n0qR6vOLvNyNhWCS6aSdSLyHHufUpUF+D6eibtrI4rX9c9NnkQLKJZvNX2QKBgGtz\\nFvcw/slfmGbKkOPfXWHDp1DZA+qd6lj6g1aXcJSACINDTLf2XRNI1l4ZNvVX3uKg\\nPPVcGhK5N9N14WyaAUfKZ6vUDQLyIyg6v/LLdr4JPPakm+LM15cmYVmf889GXpJ7\\nu6IUyQmNJkk9lJnR1brIj0EAo35ermF6yiPC5clHAoGBANACJc6qQ8YtXRGCGpVU\\nzuYMrAPSMJmehxvOYQC4QRzZefTijpIs3omGm8Lpz+QotNOUltJx/aAeJADJ2fts\\niOwv7O7+CBJbSDW+hqW2MaSNaHrvv2HmQJ8LMU0w7oX91nhLPNDRykF3gJ3IvjfH\\n1/X7Mr52PGUXvA1EREEVFZOa\\n-----END PRIVATE KEY-----\\n",
          "SVC_ACCOUNT_EMAIL": "interview-bot-dev@deft-breaker-269101.iam.gserviceaccount.com",
          "SVC_ACCOUNT_ID": "103295999729929401239",
          "SVC_ACCOUNT_X509_CERT_URL": "https://www.googleapis.com/robot/v1/metadata/x509/interview-bot-dev%40deft-breaker-269101.iam.gserviceaccount.com"
        },
        "name": "serverless-flask-master-send_messages",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {}
      },
      "app": {
        "handler": "wsgi_handler.handler",
        "events": [
          {
            "http": "ANY /"
          },
          {
            "http": "ANY {proxy+}"
          }
        ],
        "environment": {
          "SLACK_BOT_TOKEN": "xoxb-944033221973-954347421926-mKpkJu19UvPAT29c4FYp5NJz",
          "SLACK_VERIFICATION_TOKEN": "fYSp1k2g5FubaL485hUtYimk",
          "INTERVIEW_AVAIL_CAL": "contino.io_eepahmdv2bb1tvhbvv0ictha3g@group.calendar.google.com",
          "SVC_ACCOUNT_PRIV_KEY_ID": "191161d4fadad103860896f1149f9bd59cf92dfb",
          "SVC_ACCOUNT_PRIV_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQChTyYYZmILcuHi\\nc9a+hbzLVxjDYfvrpBNRhFxhl+izdHOdA6mBp9eubh4/zsgq015jtlr3YLXXIxSA\\nbyHQlmaPRDq1Vbnad9MxzMUI+BzV93uqMU+6wrQBqrS2fSltrn6nWM4/Wu2cuHrF\\nxesWtdoa+zoj+G7B4ec03Cwa0a1vDoyDbC6S8RfMHXtTytq5Lf6FCF2ay/UB8Yrg\\nVGyFuxM1eB3GSUCgMx6QD9caHb5wkVMZ4f8pX06kh4K0Xd2GrBjdJ8EnhgZeJAEL\\nNaiACg0ihRH+7AgbFHzYcVyeyKJW4/hTGn3R8MpSCykEK+kxGMhed7rWMGsu9bPi\\nYpP80g59AgMBAAECggEAUDrho7kogrE9EDi1UkWKRUiolGUju2v7/8tpd1Dq+Hav\\nGiU8JbSpXaR/fxUGEebXR5jnXarIRpy4Ebk0hF6J3C//Uzm0GqkGbfp+9ZsSHInf\\nBCNKmIVGqp2RDELsXBUyAWH2EyTSkeRfjAaIit8f/9N8c2+ZBu2o5W2sshofvOAg\\neyDP2g91+8CviEvvyzIsrflbL7dEaYVmmsJqIaB9Xd0Y2ok8Sj7sf21HGRBPgBSu\\niYW9kURa57C+BCQrN4qJeSwLGJDoTo+4L9g/id2NIJrPEIH8jQ99fK823n4w0/u3\\nS1fe/yRrQ2et8OwI1oGVnSnUfDxK6y0ZKh7265RGsQKBgQDgOpoCaPUGv8JKfIXz\\neinLZ/4coGGOPlZUm4DF5g0/HeCb3jQSOIuv1vta+KtaqzyqdWnop2ePsEwsKP4K\\nlnIN4K1eJF2Wp66i5Wd56B/LEplQ/PKiYkZYaxmGyiJxC1m7h1GoTSp0r787tQTR\\nfLZP6Zy8ztNZvYsb3vVVQHt9gwKBgQC4KkaKkxqyHl4OHqXhYN2/saXfxaaXY15E\\nHx7yBOidGPx0HknXg+8BaX382bs0fQMd1Yl3rofIKIJKeWNI30fDZNudIAc5VnRP\\nOqFLgotcjzbusLoekxtnJqdxsq5tuGNqEoGJB/fLSL2zgEUkkJWEz/aHvEac9fSo\\n25+ALzKD/wKBgQC4vg+d5LPct6lwjWAf1osQ18F5/HnkJGAknWpfosdPNWKViWIF\\nkSkl206FCVTFA0iceNiloyekL3DTAYMtXf7iiDbO1c92DPnJpJC41BM90TkYjQ+r\\n0qR6vOLvNyNhWCS6aSdSLyHHufUpUF+D6eibtrI4rX9c9NnkQLKJZvNX2QKBgGtz\\nFvcw/slfmGbKkOPfXWHDp1DZA+qd6lj6g1aXcJSACINDTLf2XRNI1l4ZNvVX3uKg\\nPPVcGhK5N9N14WyaAUfKZ6vUDQLyIyg6v/LLdr4JPPakm+LM15cmYVmf889GXpJ7\\nu6IUyQmNJkk9lJnR1brIj0EAo35ermF6yiPC5clHAoGBANACJc6qQ8YtXRGCGpVU\\nzuYMrAPSMJmehxvOYQC4QRzZefTijpIs3omGm8Lpz+QotNOUltJx/aAeJADJ2fts\\niOwv7O7+CBJbSDW+hqW2MaSNaHrvv2HmQJ8LMU0w7oX91nhLPNDRykF3gJ3IvjfH\\n1/X7Mr52PGUXvA1EREEVFZOa\\n-----END PRIVATE KEY-----\\n",
          "SVC_ACCOUNT_EMAIL": "interview-bot-dev@deft-breaker-269101.iam.gserviceaccount.com",
          "SVC_ACCOUNT_ID": "103295999729929401239",
          "SVC_ACCOUNT_X509_CERT_URL": "https://www.googleapis.com/robot/v1/metadata/x509/interview-bot-dev%40deft-breaker-269101.iam.gserviceaccount.com"
        },
        "name": "serverless-flask-master-app",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {}
      }
    },
    "artifact": "/Users/ashokgadepalli/interview-scheduler-slackbot/.serverless/serverless-flask.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-flask/master/1583101135204-2020-03-01T22:18:55.204Z",
    "artifact": "serverless-flask.zip"
  }
}